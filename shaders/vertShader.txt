#version 330 core

// model information
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 texCoord;
layout (location = 3) in vec3 color;

// light model
uniform vec3 u_light_position;
uniform vec3 u_light_color;
uniform float u_shininess;
uniform vec3 u_ambient_color;


// scene transformations
uniform mat4 mv;
uniform mat4 mvp;

// output data
out vec3 v_vertex;
out vec3 v_color;
out vec3 v_normal;

void main()
{
    v_vertex = vec3(mv * vec4(position, 1.0));

    v_normal = vec3(mv * vec4(normal, 0.0));

    // pass the vertex color to the fragment shader
    v_color = color;

    // transform the location of the vertex
    gl_Position = mvp * vec4(position, 1.0);
}
